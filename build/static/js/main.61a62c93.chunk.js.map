{"version":3,"sources":["firebase_config.js","Message.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","MessageListItem","message","inprogress","id","style","display","ListItem","ListItemText","primary","secondary","Button","onClick","collection","doc","update","delete","App","useState","messages","setTodos","todoInput","setMessageInput","useEffect","onSnapshot","querySnapshot","docs","map","data","className","color","flexDirection","justifyContent","alignItems","width","alt","src","TextField","label","value","maxWidth","onChange","e","target","type","variant","preventDefault","add","timestamp","FieldValue","serverTimestamp","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAUAA,IAASC,cARc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAIT,IAAMC,EAAKR,IAASS,Y,iBCPL,SAASC,EAAT,GAAuD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,WAAYC,EAAM,EAANA,GAW7D,OACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAASP,EACTQ,UAAWP,EAAa,WAAa,iBAIzC,cAACQ,EAAA,EAAD,CAAQC,QAnBZ,WACEb,EAAGc,WAAW,YAAYC,IAAIV,GAAIW,OAAO,CACvCZ,YAAaA,KAiBb,SACGA,EAAa,cAAa,SAE7B,cAACQ,EAAA,EAAD,CAAQC,QAhBZ,WACEb,EAAGc,WAAW,YAAYC,IAAIV,GAAIY,UAehC,iCC4DSC,MA/Ef,WAAgB,IAAD,EACgBC,mBAAS,IADzB,mBACNC,EADM,KACIC,EADJ,OAEwBF,mBAAS,IAFjC,mBAENG,EAFM,KAEKC,EAFL,KAgCb,OA5BAC,qBAAU,WAKRxB,EAAGc,WAAW,YAAYW,YAAW,SAAUC,GAC7CL,EACEK,EAAcC,KAAKC,KAAI,SAACb,GAAD,MAAU,CAC/BV,GAAIU,EAAIV,GACRF,QAASY,EAAIc,OAAO1B,QACpBC,WAAYW,EAAIc,OAAOzB,qBAR5B,IA2BD,qBAAK0B,UAAU,MAAf,SACE,sBACExB,MAAO,CAELyB,MAAO,UACPxB,QAAS,OACTyB,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,MAAO,QARX,UAWG,qBAAKC,IAAI,OAAOC,IAAI,iBACrB,6DACA,iCACE,cAACC,EAAA,EAAD,CACEjC,GAAG,iBACHkC,MAAM,4BACNC,MAAOlB,EACPhB,MAAO,CAAE6B,MAAO,OAAQM,SAAU,SAClCC,SAAU,SAACC,GAAD,OAAOpB,EAAgBoB,EAAEC,OAAOJ,UAE5C,cAAC5B,EAAA,EAAD,CACEiC,KAAK,SACLC,QAAQ,YACRjC,QAtCV,SAAoB8B,GAClBA,EAAEI,iBAEF/C,EAAGc,WAAW,YAAYkC,IAAI,CAC5B5C,YAAY,EACZ6C,UAAWzD,IAASS,UAAUiD,WAAWC,kBACzChD,QAASmB,IAGXC,EAAgB,KA8BRjB,MAAO,CAAEC,QAAS,QAJpB,wBAUF,qBAAKD,MAAO,CAAE6B,MAAO,OAAQM,SAAU,QAASW,UAAW,QAA3D,SACGhC,EAASQ,KAAI,SAACzB,GAAD,OACZ,cAACD,EAAD,CACEC,QAASA,EAAQA,QACjBC,WAAYD,EAAQC,WACpBC,GAAIF,EAAQE,gBC1E1BgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.61a62c93.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBvhA4DXOsnVYOFfYUEE7sNCknQKur2cBk\",\n  authDomain: \"messageboardgv.firebaseapp.com\",\n  projectId: \"messageboardgv\",\n  storageBucket: \"messageboardgv.appspot.com\",\n  messagingSenderId: \"348837995714\",\n  appId: \"1:348837995714:web:5a6dd011b00fa999ef875b\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport { db };\n","import React from \"react\";\nimport { ListItem, ListItemText, Button } from \"@material-ui/core\";\nimport { db } from \"./firebase_config\";\n\n\nexport default function MessageListItem({ message, inprogress, id }) {\n  function toggleInProgress() {\n    db.collection(\"messages\").doc(id).update({\n      inprogress: !inprogress,\n    });\n  }\n\n  function deleteMessage() {\n    db.collection(\"messages\").doc(id).delete();\n  }\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <ListItem>\n        <ListItemText\n          primary={message}\n          secondary={inprogress ? \"Para ler\" : \"Já lida\"}\n        />\n      </ListItem>\n\n      <Button onClick={toggleInProgress}>\n        {inprogress ? \"Não Lida\" : \"Lida\"}\n      </Button>\n      <Button onClick={deleteMessage}>Deletar mensagem</Button>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { db } from \"./firebase_config\";\nimport firebase from \"firebase\";\nimport MessageListItem from \"./Message\";\n\n\nfunction App() {\n  const [messages, setTodos] = useState([]);\n  const [todoInput, setMessageInput] = useState(\"\");\n\n  useEffect(() => {\n    getMessages();\n  }, []); // blank to run only on first launch\n\n  function getMessages() {\n    db.collection(\"messages\").onSnapshot(function (querySnapshot) {\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          message: doc.data().message,\n          inprogress: doc.data().inprogress,\n        }))\n      );\n    });\n  }\n\n  function AddMessage(e) {\n    e.preventDefault();\n\n    db.collection(\"messages\").add({\n      inprogress: true,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: todoInput,\n    });\n\n    setMessageInput(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          \n          color: \"#2b385b\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n         <img alt=\"logo\" src=\"./logogd.png\"/> \n        <h1>Quadro de Mensagens GrowDev</h1>\n        <form>\n          <TextField\n            id=\"standard-basic\"\n            label=\"Escreva uma mensagem aqui\"\n            value={todoInput}\n            style={{ width: \"90vw\", maxWidth: \"500px\" }}\n            onChange={(e) => setMessageInput(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            onClick={AddMessage}\n            style={{ display: \"none\" }}\n          >\n            Default\n          </Button>\n        </form>\n\n        <div style={{ width: \"90vw\", maxWidth: \"500px\", marginTop: \"24px\" }}>\n          {messages.map((message) => (\n            <MessageListItem\n              message={message.message}\n              inprogress={message.inprogress}\n              id={message.id}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}