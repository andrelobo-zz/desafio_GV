{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/loboblanco/\\xC1rea de Trabalho/GrowDev/growdev_message_board/message_board_GD/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { db } from \"./firebase_config\";\nimport firebase from \"firebase\";\nimport TodoListItem from \"./Message\";\nimport logo from './logogd.png';\n\nfunction App() {\n  _s();\n\n  const [messages, setTodos] = useState([]);\n  const [todoInput, setMessageInput] = useState(\"\");\n  useEffect(() => {\n    getMessages();\n  }, []); // blank to run only on first launch\n\n  function getMessages() {\n    db.collection(\"messages\").onSnapshot(function (querySnapshot) {\n      setTodos(querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        message: doc.data().message,\n        inprogress: doc.data().inprogress\n      })));\n    });\n  }\n\n  function AddMessage(e) {\n    e.preventDefault();\n    db.collection(\"messages\").add({\n      inprogress: true,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: todoInput\n    });\n    setMessageInput(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"#FFFFFF\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../public/logogd.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quadro de Mensagens GrowDev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          label: \"Escreva uma mensagem aqui\",\n          value: todoInput,\n          style: {\n            width: \"90vw\",\n            maxWidth: \"500px\"\n          },\n          onChange: e => setMessageInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          onClick: AddMessage,\n          style: {\n            display: \"none\"\n          },\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"90vw\",\n          maxWidth: \"500px\",\n          marginTop: \"24px\"\n        },\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(TodoListItem, {\n          message: message.message,\n          inprogress: message.inprogress,\n          id: message.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GR8asNpIoviLzn42FMMvfAj9Jw8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/loboblanco/Área de Trabalho/GrowDev/growdev_message_board/message_board_GD/src/App.js"],"names":["TextField","useState","useEffect","Button","db","firebase","TodoListItem","logo","App","messages","setTodos","todoInput","setMessageInput","getMessages","collection","onSnapshot","querySnapshot","docs","map","doc","id","message","data","inprogress","AddMessage","e","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","color","display","flexDirection","justifyContent","alignItems","width","maxWidth","target","value","marginTop"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { db } from \"./firebase_config\";\nimport firebase from \"firebase\";\nimport TodoListItem from \"./Message\";\nimport logo from './logogd.png';\n\nfunction App() {\n  const [messages, setTodos] = useState([]);\n  const [todoInput, setMessageInput] = useState(\"\");\n\n  useEffect(() => {\n    getMessages();\n  }, []); // blank to run only on first launch\n\n  function getMessages() {\n    db.collection(\"messages\").onSnapshot(function (querySnapshot) {\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          message: doc.data().message,\n          inprogress: doc.data().inprogress,\n        }))\n      );\n    });\n  }\n\n  function AddMessage(e) {\n    e.preventDefault();\n\n    db.collection(\"messages\").add({\n      inprogress: true,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: todoInput,\n    });\n\n    setMessageInput(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          \n          color: \"#FFFFFF\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n      <img src=\"../public/logogd.png\" />\n        <h1>Quadro de Mensagens GrowDev</h1>\n        <form>\n          <TextField\n            id=\"standard-basic\"\n            label=\"Escreva uma mensagem aqui\"\n            value={todoInput}\n            style={{ width: \"90vw\", maxWidth: \"500px\" }}\n            onChange={(e) => setMessageInput(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            onClick={AddMessage}\n            style={{ display: \"none\" }}\n          >\n            Default\n          </Button>\n        </form>\n\n        <div style={{ width: \"90vw\", maxWidth: \"500px\", marginTop: \"24px\" }}>\n          {messages.map((message) => (\n            <TodoListItem\n              message={message.message}\n              inprogress={message.inprogress}\n              id={message.id}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}